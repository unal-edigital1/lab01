# Reading C:/intelFPGA_lite/19.1/modelsim_ase/tcl/vsim/pref.tcl
# do sum1bcc_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying C:/intelFPGA_lite/19.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/UECCI/Documents/GitHub/arquitecturaProcesadores/lab00/hdl/src {C:/Users/UECCI/Documents/GitHub/arquitecturaProcesadores/lab00/hdl/src/sum1bcc.v}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 21:34:05 on Sep 15,2020
# vlog -reportprogress 300 -vlog01compat -work work "+incdir+C:/Users/UECCI/Documents/GitHub/arquitecturaProcesadores/lab00/hdl/src" C:/Users/UECCI/Documents/GitHub/arquitecturaProcesadores/lab00/hdl/src/sum1bcc.v 
# -- Compiling module sum1bcc
# 
# Top level modules:
# 	sum1bcc
# End time: 21:34:05 on Sep 15,2020, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
vsim work.sum1bcc
# vsim work.sum1bcc 
# Start time: 21:34:42 on Sep 15,2020
# Loading work.sum1bcc
add wave -position insertpoint  \
sim:/sum1bcc/A \
sim:/sum1bcc/B \
sim:/sum1bcc/Ci \
sim:/sum1bcc/Cout \
sim:/sum1bcc/S \
sim:/sum1bcc/st
force -freeze sim:/sum1bcc/A 1 0
force -freeze sim:/sum1bcc/B 1 0
force -freeze sim:/sum1bcc/Ci 1 0, 0 {50 ps} -r 100
run
run
